# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-22 15:34
from __future__ import unicode_literals

import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import exp2.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('app_label', models.CharField(blank=True, default='', help_text='only necessary if this has a dedicated django app. not needed for apps which use generic tasks', max_length=32, null=True)),
                ('task_type', models.ForeignKey(help_text='the value of this field is used to bind a data object (this) to the proper class in the code', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('enforce_training_task_order', models.BooleanField(default=True)),
            ],
            bases=(exp2.models.FieldPropagatorMixin, dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('desc', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='ExperimentalTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='descriptive for Experimenter must be unique within Experiment', max_length=64)),
                ('label', models.CharField(help_text='what user sees in their task list does not need to be unique', max_length=64)),
                ('task_type', models.CharField(choices=[('PRE_TRAINING_TASK', 'Pre-Training Task'), ('TRAINING_TASK', 'Training Task'), ('POST_TRAINING_TASK', 'Post-Training Task')], default='TRAINING_TASK', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('pre_training_tasks_enabled', models.BooleanField(default=True)),
                ('training_tasks_enabled', models.BooleanField(default=True)),
                ('post_training_tasks_enabled', models.BooleanField(default=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facilities', to='exp2.Experiment')),
            ],
            options={
                'verbose_name_plural': 'Facilities',
            },
            bases=(exp2.models.FieldPropagatorMixin, dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OrderedTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordered_tasks', to='exp2.Condition')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.PositiveIntegerField()),
                ('decommissioned', models.BooleanField(default=False)),
                ('enforce_training_task_order', models.BooleanField(default=True)),
                ('pre_training_tasks_enabled', models.BooleanField(default=True)),
                ('training_tasks_enabled', models.BooleanField(default=True)),
                ('post_training_tasks_enabled', models.BooleanField(default=True)),
                ('condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='participants', to='exp2.Condition')),
            ],
            bases=(exp2.models.FieldInheritorMixin, dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('pre_training_tasks_enabled', models.BooleanField(default=True)),
                ('training_tasks_enabled', models.BooleanField(default=True)),
                ('post_training_tasks_enabled', models.BooleanField(default=True)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='exp2.Facility')),
            ],
            bases=(exp2.models.FieldInheritorMixin, exp2.models.FieldPropagatorMixin, dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TaskParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('value', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='GenericTask',
            fields=[
                ('experimentaltask_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='exp2.ExperimentalTask')),
            ],
            bases=('exp2.experimentaltask',),
        ),
        migrations.AddField(
            model_name='taskparameter',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_parameters', to='exp2.ExperimentalTask'),
        ),
        migrations.AddField(
            model_name='participant',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='exp2.Section'),
        ),
        migrations.AddField(
            model_name='participant',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='participants', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='orderedtask',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='exp2.ExperimentalTask'),
        ),
        migrations.AddField(
            model_name='experimentaltask',
            name='app',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='exp2.App'),
        ),
        migrations.AddField(
            model_name='experimentaltask',
            name='experiment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='exp2.Experiment'),
        ),
        migrations.AddField(
            model_name='condition',
            name='experiment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='exp2.Experiment'),
        ),
        migrations.AlterUniqueTogether(
            name='taskparameter',
            unique_together=set([('task', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='section',
            unique_together=set([('facility', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='participant',
            unique_together=set([('section', 'uid')]),
        ),
        migrations.AlterUniqueTogether(
            name='facility',
            unique_together=set([('experiment', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='experimentaltask',
            unique_together=set([('experiment', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='condition',
            unique_together=set([('experiment', 'name')]),
        ),
    ]
